<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>72</y>
      <w>360</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>Class: Booking
--
Class representing a theatre booking
--
int bookingId;
int showId;
int customerId;
int seatType;
0 for CircleSeat 1 for StallsSeat
int seatNumber;
int concession;
boolean concession;
int isPostal;
int price;

Methods
public boolean getPostageAvailable()
Checks to see if the start date of the show is within the next 7 days</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>328</y>
      <w>272</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>Class: Play
--
int playId;
String playTitle;
int playType;
String playDescription;
Time playTime;
Date playDate;
Time playDuration;
Int circlePrice;
Int stallPrice;
int musicalAccompaniment;
String language;

public String getPlayTypeString()
switch (playType){
case 0: return "Theatre";
case 1: return "Musical";
...


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>928</x>
      <y>576</y>
      <w>200</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Class Employee
--
int employeeId;
String username;
String password;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>296</x>
      <y>1080</y>
      <w>232</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Class Scanner
--
Gets input from user
Scanner scanner = new Scanner(System.in);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>688</y>
      <w>336</w>
      <h>424</h>
    </coordinates>
    <panel_attributes>Class DatabaseManager
--
Interfaces with the SQL database
--
Refactor Tony's code from the DBConnector class 
in JDBC project.

Has methods like book ticket, cancel ticket, get available
seats for a show, etc

Methods:

getShow(String showName);
Returns a show object which we can use accessor methods on
getShow(Date dateOfShow);
Returns a show object which we can use accessor methods on
addShow();
printShow();
Prints show details to console
createTicket();
creates a ticket for a certain seat
browseShows()
Returns a list of all shows with start date being equal or later than
the current date and start time later than the current time
createShow(constructor) invokes createShowSeats()
which invokes createShowCircleSeats() and createShowStallsSeats()
CircleSeats and StallsSeat are basically boolean arrays
getCircleSeatAvailability(int seatNo)
Checks the availability of the given circle seat
getStallsSeatAvailability(int seatNo)
as above for stalls</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>312</x>
      <y>656</y>
      <w>472</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>Class: Controller
--
User facing class, gets input from user and prints to terminal

Creates a normal session with hidden menu for logging in
If user logs in creates an employee session

User can type in numbers to select options
Default menu:
1. Browse shows
2. Search by name
3. Search by date
4. Go to basket
5. Checkout
Hidden key. Staff portal [log in]

Basket menu:
1. Concession
2. Postage 

Employee menu:
1. Browse shows
2. Search by name
3. Search by date
4. Add show
5. Logout

Methods
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>400</x>
      <y>1048</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>584</x>
      <y>464</y>
      <w>240</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>Class: Shopping Basket
--
ArrayList&lt;Ticket&gt; shoppingBasket;

public Ticket getItem(index i)
return shoppingBasket.get(i);

public void addToBasket(Ticket ticket)
shoppingBasket.add(ticket);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>152</y>
      <w>24</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>144</y>
      <w>280</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>330.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1024</x>
      <y>216</y>
      <w>176</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;.&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;200.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>224</y>
      <w>128</w>
      <h>480</h>
    </coordinates>
    <panel_attributes>lt=&lt;.&gt;
Two way relationship</panel_attributes>
    <additional_attributes>10.0;580.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1016</x>
      <y>648</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>632</y>
      <w>24</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>776</x>
      <y>896</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;.&gt;
</panel_attributes>
    <additional_attributes>150.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>376</x>
      <y>8</y>
      <w>24</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;.&gt;
</panel_attributes>
    <additional_attributes>10.0;400.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>376</x>
      <y>0</y>
      <w>856</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;.&gt;
Two way relationship</panel_attributes>
    <additional_attributes>1050.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1208</x>
      <y>8</y>
      <w>24</w>
      <h>696</h>
    </coordinates>
    <panel_attributes>lt=&lt;.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;850.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>152</x>
      <y>152</y>
      <w>224</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Class: MainPerformer
--
int showId;
ArrayList&lt;String&gt; mainPerformer;

methods
public void addMainPerformer(String name)
mainPerformers.add(name);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>248</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
